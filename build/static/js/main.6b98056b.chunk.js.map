{"version":3,"sources":["components/TaskForm/index.jsx","components/Controls/Search/index.jsx","components/Controls/Sort/index.jsx","components/Controls/index.jsx","components/TaskList/TaskItem/index.jsx","components/TaskList/index.jsx","App.js","index.js"],"names":["TaskForm","props","onCloseForm","onShowForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","this","task","nextProps","className","onClick","type","required","Component","Search","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Controls","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elementTasks","map","key","App","handleGenerateData","generateID","localStorage","setItem","JSON","stringify","handleToggleForm","isDisplayForm","taskEditing","handleCloseForm","handleShowForm","handleSubmit","data","push","findIndex","handleUpateStatus","_","result","forEach","handleDelete","splice","handleUpdate","handleFilter","parseInt","filter","toLowerCase","handleSearch","handleSort","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","elementTaskForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b98056b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false,\n    };\n  }\n\n  // When click update\n  componentWillMount() {\n    if (this.props.task) {\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status,\n      });\n    }\n  }\n\n  // change between add & edit form\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.task) {\n      this.setState({\n        id: nextProps.task.id,\n        name: nextProps.task.name,\n        status: nextProps.task.status,\n      });\n    } else if (!nextProps.task) {\n      this.setState({ id: \"\", name: \"\", status: false });\n    }\n  }\n\n  onCloseForm = () => {\n    this.props.onCloseForm();\n  };\n\n  onShowForm = () => {\n    this.props.onShowForm();\n  };\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n    }\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    // Cancel & close form\n    this.onClear();\n  };\n\n  onClear = () => {\n    this.setState({\n      name: \"\",\n      status: false,\n    });\n  };\n\n  render() {\n    var { id } = this.state;\n    return (\n      <div className=\"panel panel-warning\">\n        <div className=\"panel-heading \">\n          <h3 className=\"panel-title \">\n            {id !== \"\" ? \"Edit Todo\" : \"Add Todo\"}\n            <span\n              className=\"fas fa-times-circle ml-5\"\n              onClick={this.onCloseForm}\n            ></span>\n          </h3>\n        </div>\n        <div className=\"panel-body\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.onChange}\n              />\n            </div>\n            <label>Status: </label>\n            <select\n              className=\"form-control\"\n              required=\"required\"\n              name=\"status\"\n              value={this.state.status}\n              onChange={this.onChange}\n            >\n              <option value={false}>Active</option>\n              <option value={true}>Hiden</option>\n            </select>\n            <br />\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-warning\">\n                <span className=\"fas fa-plus mr-5\"></span>Add\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={this.onClear}\n              >\n                <span className=\"fa fa-times mr-5\"></span> Delete\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskForm;\n","import React, { Component } from \"react\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n    };\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSearch = () => {\n    this.props.onSearch(this.state.keyword);\n  };\n\n  render() {\n    var { keyword } = this.state;\n    return (\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n        <div className=\"input-group\">\n          <input\n            name=\"keyword\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Looking for...\"\n            value={keyword}\n            onChange={this.onChange}\n          />\n          <span className=\"input-group-btn\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={this.onSearch}\n            >\n              <span className=\"fa fa-search mr-5\"></span>Find\n            </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\n\nclass Sort extends Component {\n  onClick = (sortBy, sortValue) => {\n    this.props.onSort(sortBy, sortValue);\n  };\n\n  render() {\n    return (\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n        <div className=\"dropdown\">\n          <button\n            className=\"btn btn-primary dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenu1\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"true\"\n          >\n            Sort <span className=\"fas fa-sort ml-5\"></span>\n          </button>\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n            <li onClick={() => this.onClick(\"name\", 1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"name\" && this.props.sortValue === 1\n                    ? \"sort_selected\"\n                    : \"\"\n                }\n              >\n                <span className=\"fa fa-sort-alpha-asc pr-5\">Name A-Z</span>\n              </a>\n            </li>\n            <li onClick={() => this.onClick(\"name\", -1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"name\" && this.props.sortValue === -1\n                    ? \"sort_selected\"\n                    : \"\"\n                }\n              >\n                <span className=\"fa fa-sort-alpha-desc pr-5\">Name Z-A</span>\n              </a>\n            </li>\n            <li role=\"separator\" className=\"divider\"></li>\n            <li onClick={() => this.onClick(\"status\", 1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"status\" && this.props.sortValue === 1\n                    ? \"sort_selected\"\n                    : \"\"\n                }\n              >\n                Status Active\n              </a>\n            </li>\n            <li onClick={() => this.onClick(\"status\", -1)}>\n              <a\n                role=\"button\"\n                className={\n                  this.props.sortBy === \"status\" && this.props.sortValue === -1\n                    ? \"sort_selected\"\n                    : \"\"\n                }\n              >\n                Status Hiden\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sort;\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport Sort from \"./Sort\";\n\nclass Controls extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"row mt-15\">\n        <Search onSearch={this.props.onSearch} />\n        <Sort\n          onSort={this.props.onSort}\n          sortBy={this.props.sortBy}\n          sortValue={this.props.sortValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\n\nclass TaskItem extends Component {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n\n  onDelete = () => {\n    this.props.onDelete(this.props.task.id);\n  };\n\n  onUpdate = () => {\n    this.props.onUpdate(this.props.task.id);\n  };\n\n  render() {\n    var { task, index } = this.props;\n    return (\n      <tr>\n        <td>{index + 1}</td>\n        <td>{task.name}</td>\n        <td className=\"text-center\">\n          <span\n            className={\n              task.status === true\n                ? \"label label-danger\"\n                : \"label label-success\"\n            }\n            onClick={this.onUpdateStatus}\n          >\n            {task.status === true ? \"Hide\" : \"Active\"}\n          </span>\n        </td>\n        <td className=\"text-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={this.onUpdate}\n          >\n            <span className=\"fas fa-pencil-alt mr-5\"></span>\n            Update\n          </button>\n          &nbsp;\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={this.onDelete}\n          >\n            <span className=\"fas fa-trash mr-5\"></span>Delete\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default TaskItem;\n","import React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { filterName: \"\", filterStatus: -1 };\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.props.onFilter(\n      name === \"filterName\" ? value : this.state.filterName,\n      name === \"filterStatus\" ? value : this.state.filterStatus\n    );\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    var { tasks } = this.props; // var tasks = this.props.tasks\n    var { filterName, filterStatus } = this.state;\n    var elementTasks = tasks.map((task, index) => {\n      return (\n        <TaskItem\n          key={task.id}\n          index={index}\n          task={task}\n          onUpdateStatus={this.props.onUpdateStatus}\n          onDelete={this.props.onDelete}\n          onUpdate={this.props.onUpdate}\n        />\n      );\n    });\n    return (\n      <table className=\"table table-bordered table-hover mt-15\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">Orderd</th>\n            <th className=\"text-center\">Name</th>\n            <th className=\"text-center\">Status</th>\n            <th className=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"filterName\"\n                value={filterName}\n                onChange={this.onChange}\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                name=\"filterStatus\"\n                value={filterStatus}\n                onChange={this.onChange}\n              >\n                <option value={-1}>All</option>\n                <option value={0}>Hide</option>\n                <option value={1}>Activate</option>\n              </select>\n            </td>\n            <td></td>\n          </tr>\n          {elementTasks}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controls from \"./components/Controls\";\nimport TaskList from \"./components/TaskList\";\nimport _ from \"lodash\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditing: null,\n      filter: { name: \"\", status: -1 },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n\n  // Keep tasks when reload page\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({ tasks: tasks });\n    }\n  }\n\n  // Generate sample tasks\n  handleGenerateData = () => {\n    var tasks = [\n      { id: this.generateID(), name: \"sampleA\", status: true },\n      { id: this.generateID(), name: \"sampleB\", status: false },\n      { id: this.generateID(), name: \"sampleC\", status: true },\n    ];\n    this.setState({\n      tasks: tasks,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  // Toggle form add tasks\n  handleToggleForm = () => {\n    if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null,\n      });\n    }\n  };\n\n  // Close form add tasks\n  handleCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  // Show form add tasks\n  handleShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  // add task when submit\n  handleSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id === \"\") {\n      // Create a new unique ID\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      //Editing\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n      this.handleCloseForm();\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  // Change tasks status\n  handleUpateStatus = (id) => {\n    var { tasks } = this.state;\n    // var index = this.findIndex(id);\n    var index = _.findIndex(tasks, (task) => {\n      //lodash\n      return task.id === id;\n    });\n\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  // Find index of tasks that need to be change it status\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  //Delete tasks\n  handleDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.handleCloseForm();\n  };\n\n  // Update tasks\n  handleUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var taskEditing = tasks[index];\n    this.setState({ taskEditing: taskEditing });\n    this.handleShowForm();\n  };\n\n  handleFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  handleSearch = (keyword) => {\n    this.setState({ keyword: keyword });\n  };\n\n  handleSort = (sortBy, sortValue) => {\n    this.setState({ sortBy: sortBy, sortValue: sortValue });\n  };\n\n  // Create a random string\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  // Generate an unique ID from random strings\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4()\n    );\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditing,\n      filter,\n      keyword,\n      sortBy,\n      sortValue,\n    } = this.state; // var tasks = this.state.tasks\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 0 ? true : false);\n        }\n      });\n    }\n\n    if (keyword) {\n      // tasks = tasks.filter((task) => {\n      //   return task.name.toLowerCase().indexOf(keyword) !== -1;\n      // });\n      tasks = _.filter(tasks, (task) => {\n        //lodash\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    }\n\n    if (sortBy === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return sortValue;\n        else if (a.status < b.status) return -sortValue;\n        else return 0;\n      });\n    }\n\n    var elementTaskForm = isDisplayForm ? (\n      <TaskForm\n        onSubmit={this.handleSubmit}\n        onCloseForm={this.handleCloseForm}\n        onShowForm={this.handleShowForm}\n        task={taskEditing}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>\n            <strong>TODO MANAGEMENT</strong>\n          </h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm === true\n                ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\n                : \"\"\n            }\n          >\n            {/* Form */}\n            {elementTaskForm}\n          </div>\n          <div\n            className={\n              isDisplayForm === true\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.handleToggleForm}\n            >\n              <span className=\"fa fa-plus mr-5\"></span>Add TODO\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger ml-5\"\n              onClick={this.handleGenerateData}\n            >\n              Generate Sample Data\n            </button>\n            {/* Controls */}\n            <Controls\n              onSearch={this.handleSearch}\n              onSort={this.handleSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n            {/* List */}\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList\n                  tasks={tasks}\n                  onUpdateStatus={this.handleUpateStatus}\n                  onDelete={this.handleDelete}\n                  onUpdate={this.handleUpdate}\n                  onFilter={this.handleFilter}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}