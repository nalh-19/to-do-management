{"ast":null,"code":"var _jsxFileName = \"/Users/nalh/Documents/web-dev/graduation thesis/reactjs/nghieppuit/todo-management/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controls from \"./components/Controls\";\nimport TaskList from \"./components/TaskList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGenerateData = () => {\n      var tasks = [{\n        id: this.generateID(),\n        name: \"a\",\n        status: true\n      }, {\n        id: this.generateID(),\n        name: \"b\",\n        status: false\n      }, {\n        id: this.generateID(),\n        name: \"c\",\n        status: true\n      }];\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    };\n\n    this.handleToggleForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.handleCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4();\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm\n    } = this.state; // var tasks = this.state.tasks\n\n    var elementTaskForm = isDisplayForm ? /*#__PURE__*/React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.handleCloseForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }) : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"TODO MANAGEMENT\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, elementTaskForm), /*#__PURE__*/React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleToggleForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }), \"Add TODO\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger ml-5\",\n      onClick: this.handleGenerateData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Generate Data\"), /*#__PURE__*/React.createElement(Controls, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      tasks: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nalh/Documents/web-dev/graduation thesis/reactjs/nghieppuit/todo-management/src/App.js"],"names":["React","Component","TaskForm","Controls","TaskList","App","constructor","props","handleGenerateData","tasks","id","generateID","name","status","setState","localStorage","setItem","JSON","stringify","handleToggleForm","isDisplayForm","state","handleCloseForm","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elementTaskForm","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,kBAZmB,GAYE,MAAM;AACzB,UAAIC,KAAK,GAAG,CACV;AACEC,QAAAA,EAAE,EAAE,KAAKC,UAAL,EADN;AAEEC,QAAAA,IAAI,EAAE,GAFR;AAGEC,QAAAA,MAAM,EAAE;AAHV,OADU,EAMV;AACEH,QAAAA,EAAE,EAAE,KAAKC,UAAL,EADN;AAEEC,QAAAA,IAAI,EAAE,GAFR;AAGEC,QAAAA,MAAM,EAAE;AAHV,OANU,EAWV;AACEH,QAAAA,EAAE,EAAE,KAAKC,UAAL,EADN;AAEEC,QAAAA,IAAI,EAAE,GAFR;AAGEC,QAAAA,MAAM,EAAE;AAHV,OAXU,CAAZ;AAiBA,WAAKC,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA9B;AACD,KAlCkB;;AAAA,SAoCnBU,gBApCmB,GAoCA,MAAM;AACvB,WAAKL,QAAL,CAAc;AACZM,QAAAA,aAAa,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADf,OAAd;AAGD,KAxCkB;;AAAA,SA0CnBE,eA1CmB,GA0CD,MAAM;AACtB,WAAKR,QAAL,CAAc;AACZM,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD,KA9CkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEZ,MAAAA,KAAK,EAAE,EAAT;AAAaW,MAAAA,aAAa,EAAE;AAA5B,KAAb;AACD;;AAEDG,EAAAA,kBAAkB,GAAG;AACnB,QAAIR,YAAY,IAAIA,YAAY,CAACS,OAAb,CAAqB,OAArB,CAApB,EAAmD;AACjD,UAAIf,KAAK,GAAGQ,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,WAAKV,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD;AACF;;AAsCDiB,EAAAA,EAAE,GAAG;AACH,WAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EACJC,QADI,CACK,EADL,EAEJC,SAFI,CAEM,CAFN,CAAP;AAGD;;AAEDpB,EAAAA,UAAU,GAAG;AACX,WACE,KAAKe,EAAL,KACA,KAAKA,EAAL,EADA,GAEA,GAFA,GAGA,KAAKA,EAAL,EAHA,GAIA,GAJA,GAKA,KAAKA,EAAL,EALA,GAMA,GANA,GAOA,KAAKA,EAAL,EAPA,GAQA,GARA,GASA,KAAKA,EAAL,EATA,GAUA,GAVA,GAWA,KAAKA,EAAL,EAXA,GAYA,GAZA,GAaA,KAAKA,EAAL,EAdF;AAgBD;;AAEDM,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEvB,MAAAA,KAAF;AAASW,MAAAA;AAAT,QAA2B,KAAKC,KAApC,CADO,CACoC;;AAC3C,QAAIY,eAAe,GAAGb,aAAa,gBACjC,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKc,QAAzB;AAAmC,MAAA,WAAW,EAAE,KAAKZ,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiC,GAGjC,EAHF;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EACPF,aAAa,KAAK,IAAlB,GACI,qCADJ,GAEI,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGa,eARH,CADF,eAWE;AACE,MAAA,SAAS,EACPb,aAAa,KAAK,IAAlB,GACI,qCADJ,GAEI,yCAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKD,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,aAPF,eAcE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKX,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdF,eAsBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,eAwBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAxBF,CAXF,CALF,CADF;AAkDD;;AAnIyB;;AAsI5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Controls from \"./components/Controls\";\nimport TaskList from \"./components/TaskList\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tasks: [], isDisplayForm: false };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({ tasks: tasks });\n    }\n  }\n\n  handleGenerateData = () => {\n    var tasks = [\n      {\n        id: this.generateID(),\n        name: \"a\",\n        status: true,\n      },\n      {\n        id: this.generateID(),\n        name: \"b\",\n        status: false,\n      },\n      {\n        id: this.generateID(),\n        name: \"c\",\n        status: true,\n      },\n    ];\n    this.setState({\n      tasks: tasks,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  handleToggleForm = () => {\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm,\n    });\n  };\n\n  handleCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4()\n    );\n  }\n\n  render() {\n    var { tasks, isDisplayForm } = this.state; // var tasks = this.state.tasks\n    var elementTaskForm = isDisplayForm ? (\n      <TaskForm onSubmit={this.onSubmit} onCloseForm={this.handleCloseForm} />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>TODO MANAGEMENT</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm === true\n                ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\n                : \"\"\n            }\n          >\n            {/* Form */}\n            {elementTaskForm}\n          </div>\n          <div\n            className={\n              isDisplayForm === true\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.handleToggleForm}\n            >\n              <span className=\"fa fa-plus mr-5\"></span>Add TODO\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger ml-5\"\n              onClick={this.handleGenerateData}\n            >\n              Generate Data\n            </button>\n            {/* Controls */}\n            <Controls />\n            {/* List */}\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList tasks={tasks} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}